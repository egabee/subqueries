specVersion: 1.0.0
name: coreum-subql
version: 0.0.1
runner:
  node:
    name: '@subql/node-cosmos'
    version: '*'
  query:
    name: '@subql/query'
    version: '*'
description: Coreum subql indexer
repository: 'https://github.com/web3query/coreum-subql'
schema:
  file: ./schema.graphql
network:
  chainId: coreum-testnet-1
  # checkd that same endpoint is used in the cored nft issuer
  endpoint: ['https://full-node.testnet-1.coreum.dev:26657']
  chainTypes:
    cosmos.bank.v1beta1:
      file: ./proto/cosmos/bank/v1beta1/tx.proto
      messages:
        - MsgSend
        - MsgMultiSend
    cosmos.bank.v1beta1.bank:
      file: ./proto/cosmos/bank/v1beta1/bank.proto
      messages:
        - Input
        - Output
    cosmos.base.v1beta1.Coin:
      file: ./proto/cosmos/base/v1beta1/coin.proto
      messages:
        - Coin
    cosmwasm.wasm.v1.tx:
      file: ./proto/cosmwasm/wasm/v1/tx.proto
      messages:
        - MsgInstantiateContract
        - MsgExecuteContract

  # check that i make the right import of the file and make it for the msg (in the cosmosmsgtypes.ts)
    coreum.asset.nft.v1:
      file: ./proto/coreum/asset/nft/v1/tx.proto
      messages:
        - MsgIssueClass

    # ===========features=================
    coreum.asset.nft.v1.ClassFeature:
      file: ./proto/coreum/asset/nft/v1/nft.proto
      messages:
        - ClassFeature
      

    # gogole proto thing 
    google.protobuf.Any:
        file: "./proto/google/protobuf/any.proto"
        messages:
         - Any
        


    coreum.asset.ft.v1:
      file: ./proto/coreum/asset/ft/v1/tx.proto
      messages:
      
        - MsgIssue
        - MsgMint
        - MsgBurn
        - MsgFreeze
        - MsgUnfreeze
        - MsgGloballyFreeze
        - MsgGloballyUnfreeze
        - MsgSetWhitelistedLimit
    coreum.asset.ft.v1.Token:
      file: ./proto/coreum/asset/ft/v1/token.proto
      messages:
        - Token
        - Feature
        - Definition
dataSources:
  - kind: cosmos/Runtime
    startBlock: 13231900
    mapping:
      file: ./dist/index.js
      handlers:
        - handler: handleNftIssue
          kind: cosmos/MessageHandler
          filter:
            type: /coreum.asset.nft.v1.MsgIssueClass
        - handler: handleMsgSend
          kind: cosmos/MessageHandler
          filter:
            type: /cosmos.bank.v1beta1.MsgSend
        - handler: handleMsgMultiSend
          kind: cosmos/MessageHandler
          filter:
            type: /cosmos.bank.v1beta1.MsgMultiSend
        - handler: handleMsgMint
          kind: cosmos/MessageHandler
          filter:
            type: /coreum.asset.ft.v1.MsgMint
        - handler: handleMsgBurn
          kind: cosmos/MessageHandler
          filter:
            type: /coreum.asset.ft.v1.MsgBurn
        - handler: handleMsgFreeze
          kind: cosmos/MessageHandler
          filter:
            type: /coreum.asset.ft.v1.MsgFreeze
        - handler: handleMsgUnfreeze
          kind: cosmos/MessageHandler
          filter:
            type: /coreum.asset.ft.v1.MsgUnfreeze
        - handler: handleMsgGloballyFreeze
          kind: cosmos/MessageHandler
          filter:
            type: /coreum.asset.ft.v1.MsgGloballyFreeze
        - handler: handleMsgGloballyUnfreeze
          kind: cosmos/MessageHandler
          filter:
            type: /coreum.asset.ft.v1.MsgGloballyUnfreeze
        - handler: handleMsgSetWhitelistedLimit
          kind: cosmos/MessageHandler
          filter:
            type: /coreum.asset.ft.v1.MsgSetWhitelistedLimit
        - handler: handleMsgInstantiateContract
          kind: cosmos/MessageHandler
          filter:
            type: /cosmwasm.wasm.v1.MsgInstantiateContract
        - handler: handleMsgExecuteContract
          kind: cosmos/MessageHandler
          filter:
            type: /cosmwasm.wasm.v1.MsgExecuteContract
